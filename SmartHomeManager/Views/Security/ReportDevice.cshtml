@model SmartHomeManager.Models.Device

@{
    ViewData["Title"] = "Report Device";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <h2 class="text-center text-dark mb-4">Device Settings: @Model.Name</h2>
                    <div class="d-flex justify-content-between mb-3">
                        <p class="lead text-muted"><strong>Type:</strong> @Model.Type</p>
                        <p class="lead text-muted"><strong>Status:</strong> @(Model.IsOn ? "On" : "Off")</p>
                    </div>

                    <h5 class="mt-4 mb-3 text-secondary">Email Settings</h5>
                    <div class="form-group">
                        <label for="receiverEmail">Receiver Email Address</label>
                        <input type="email" id="receiverEmail" class="form-control" placeholder="Receiver email will be set automatically" readonly>
                    </div>

                    <div class="form-group mt-4">
                        <label for="message">Message:</label>
                        <textarea id="message" class="form-control" rows="4" placeholder="Write your email message here"></textarea>
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <button class="btn btn-warning btn-lg rounded-pill" onclick="openMailPopup()">
                            <i class="fas fa-envelope"></i> Send Email
                        </button>
                        <a href="@Url.Action("Index", "Security")" class="btn btn-secondary btn-lg rounded-pill">
                            <i class="fas fa-arrow-left"></i> Back to Security Settings
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="mailPopup" class="popup-modal">
        <div class="popup-content">
            <h4 class="modal-title">Send Email Confirmation</h4>
            <p class="modal-text">Are you sure you want to send the device report email?</p>
            <div class="modal-actions">
                <button class="btn btn-success" onclick="sendMail()">Yes</button>
                <button class="btn btn-danger" onclick="closeMailPopup()">No</button>
            </div>
        </div>
    </div>
</div>

<style>
    .popup-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .popup-content {
        background-color: white;
        padding: 30px;
        border-radius: 10px;
        width: 400px;
        text-align: center;
        animation: fadeIn 0.3s ease-out;
    }

    .popup-modal.show {
        display: flex;
    }

    .modal-title {
        font-size: 1.5rem;
        margin-bottom: 15px;
    }

    .modal-text {
        font-size: 1.1rem;
        color: #555;
        margin-bottom: 30px;
    }

    .modal-actions button {
        width: 45%;
        padding: 10px;
        font-size: 1.1rem;
        border-radius: 5px;
        transition: transform 0.3s;
    }

        .modal-actions button:hover {
            transform: scale(1.05);
        }

        .modal-actions button:focus {
            outline: none;
        }

    .btn-success {
        background-color: #28a745;
        border: none;
    }

    .btn-danger {
        background-color: #dc3545;
        border: none;
    }

    .btn-warning {
        background-color: #ffc107;
        border: none;
    }

    .btn-success:hover {
        background-color: #218838;
    }

    .btn-danger:hover {
        background-color: #c82333;
    }

    .btn-warning:hover {
        background-color: #e0a800;
    }
</style>

<script>
    function setReceiverEmail() {
        const deviceType = '@Model.Type';
        let receiverEmail = '';

        switch (deviceType) {
            case 'Camera':
                receiverEmail = 'cameratechnic@gmail.com';
                break;
            case 'Sensor':
                receiverEmail = 'sensortechnic@gmail.com';
                break;
            case 'Thermostat':
                receiverEmail = 'thermostattechnic@gmail.com';
                break;
            case 'DoorLock':
                receiverEmail = 'doorlocktechnic@gmail.com';
                break;
            default:
                receiverEmail = '';
        }

        document.getElementById('receiverEmail').placeholder = receiverEmail;
    }

    window.onload = function () {
        setReceiverEmail();
    };

    function openMailPopup() {
        document.getElementById('mailPopup').classList.add('show');
    }

    function closeMailPopup() {
        document.getElementById('mailPopup').classList.remove('show');
    }

    function sendMail() {
        const receiverEmail = document.getElementById('receiverEmail').placeholder;
        const message = document.getElementById('message').value;

        if (!receiverEmail) {
            alert("Please enter a valid email address.");
            return;
        }

        const deviceId = '@Model.Id';
        const subject = "Device Report";
        const body = `Device: ${deviceId}\nType: @Model.Type\nStatus: @(Model.IsOn ? "On" : "Off")\n\nUser Message:\n${message}`;

        const emailData = {
            subject: subject,
            body: body,
            receiverEmail: receiverEmail
        };

        fetch('/Security/SendMail', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(emailData)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('There was an error while sending the email');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    alert("Email sent successfully!");
                } else {
                    alert("Failed to send email: " + data.message);
                }

                closeMailPopup();
            })
            .catch(error => {
                alert("Error: " + error.message);
                closeMailPopup();
            });
    }
</script>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">