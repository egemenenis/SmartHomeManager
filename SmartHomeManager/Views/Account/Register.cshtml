@model SmartHomeManager.ViewModels.RegisterViewModel

@{
    ViewData["Title"] = "Register";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm border-0 rounded-lg">
                <div class="card-header text-center bg-light">
                    <h4 class="text-dark mb-0">Create a New Account</h4>
                </div>
                <div class="card-body">
                    <form method="post">
                        <div class="mb-3">
                            <label for="Username" class="form-label">Username</label>
                            <input type="text" class="form-control form-control-lg rounded-pill" id="Username" name="Username" placeholder="Enter your username" required asp-for="Username" />
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="Email" class="form-label">Email address</label>
                            <input type="email" class="form-control form-control-lg rounded-pill" id="Email" name="Email" placeholder="Enter your email" required asp-for="Email" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label for="Password" class="form-label">Password</label>
                            <input type="password" class="form-control form-control-lg rounded-pill" id="Password" name="Password" placeholder="Enter your password" required asp-for="Password" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="ConfirmPassword" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control form-control-lg rounded-pill" id="ConfirmPassword" name="ConfirmPassword" placeholder="Confirm your password" required asp-for="ConfirmPassword" />
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>
                        <div class="d-flex justify-content-center">
                            <button type="submit" class="btn btn-primary btn-lg btn-block rounded-pill">Register</button>
                        </div>
                    </form>
                </div>

                <div class="card-footer text-center bg-light">
                    <p class="text-muted mb-0">Already have an account? <a href="/Account/Login" class="text-primary">Login here</a></p>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050;">
    <div id="successToast" class="toast" style="display: none; background-color: #28a745; color: white;">
        <div class="toast-body">
            <strong>Success!</strong> <span id="successMessage"></span>
        </div>
    </div>

    <div id="errorToast" class="toast" style="display: none; background-color: #dc3545; color: white;">
        <div class="toast-body">
            <strong>Error!</strong> <span id="errorMessage"></span>
        </div>
    </div>
</div>

<style>
    .toast {
        border-radius: 10px;
        opacity: 0.9;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: opacity 0.5s ease-in-out;
    }

    .toast-body {
        padding: 15px;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var successMessage = new URLSearchParams(window.location.search).get('successMessage');
        if (successMessage) {
            document.getElementById('successMessage').innerText = successMessage;
            showToast('successToast');
        }

        var errorMessage = new URLSearchParams(window.location.search).get('errorMessage');
        if (errorMessage) {
            document.getElementById('errorMessage').innerText = errorMessage;
            showToast('errorToast');
        }
    });

    function showToast(toastId) {
        var toast = document.getElementById(toastId);
        toast.style.display = 'block';
        setTimeout(function () {
            toast.style.opacity = '0';
            setTimeout(function () {
                toast.style.display = 'none';
                toast.style.opacity = '1';
            }, 500);
        }, 3000);
    }
</script>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">